import React, { useState } from 'react';
import { Button } from './ui/button';
import { Card } from './ui/card';
import { Play, Maximize2, RotateCcw, X } from 'lucide-react';
import { motion } from 'framer-motion';
import CategorySpecific360Viewer from './CategorySpecific360Viewer';
import Neo360Page from './Neo/Neo360';
import Premium360Tour from './Premium/Premium360Tour';
import { getNeoHeroPath } from '../utils/neoAssets';

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Å—Ç–∞—Ä–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ (–æ–±—Ä–∞—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å)
interface ModelData {
  id?: string;
  name?: string;
  collection?: string;
  heroImage?: string;
  view360Url?: string;
  [key: string]: any;
}

// –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –æ–±–æ–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤
interface Virtual360ViewerProps {
  // –ù–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
  imageUrl?: string;
  modelName?: string;
  view360Url?: string;
  category?: 'premium' | 'neo' | 'skyline' | string;
  slug?: string;
  description?: string;
  fullView?: boolean;
  
  // –°—Ç–∞—Ä—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
  model?: ModelData;
  onClose?: () => void;
  isDark?: boolean;
}

export function Virtual360Viewer(props: Virtual360ViewerProps) {
  const [isLoading, setIsLoading] = useState(false);
  
  // –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ –æ–±–æ–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤
  const model = props.model || {};
  const isDark = props.isDark || false;
  const onClose = props.onClose || (() => {});
  
  // –ù–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏–º–µ–µ—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –Ω–∞–¥ —Å—Ç–∞—Ä—ã–º
  const modelName = props.modelName || model.name || '';
  const view360Url = props.view360Url || model.view360Url || '';
  
  // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é (–ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å—Ç—Ä–æ–∫ –≤—Ä–æ–¥–µ "Premier", "Premium Collection")
  function normalizeCategory(raw?: string): string | undefined {
    if (!raw) return undefined;
    const s = String(raw).toLowerCase();
    if (s.includes('neo')) return 'neo';
    if (s.includes('prem')) return 'premium';
    if (s.includes('skyline')) return 'skyline';
    if (s === 'neo' || s === 'premium' || s === 'skyline') return s;
    return undefined;
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∞ –æ—Å–Ω–æ–≤–µ props –ª–∏–±–æ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –º–æ–¥–µ–ª–∏
  const category = normalizeCategory(props.category) || normalizeCategory(model.collection) || 'skyline';
  const slug = props.slug || model.id || '';
  const description = props.description || '';
  const fullView = props.fullView || false;
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ undefined
  if (slug === 'undefined' || slug === undefined || slug === null) {
    console.error(`‚ùå Virtual360Viewer: Invalid slug detected: "${slug}"`);
    console.error(`‚ùå Virtual360Viewer: Props analysis:`, {
      'props.slug': props.slug,
      'model.id': model.id,
      'model': model
    });
  }
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º
  // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: 1) —è–≤–Ω–æ —É–∫–∞–∑–∞–Ω–Ω—ã–π imageUrl, 2) —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—É—Ç–∏ –¥–ª—è Neo (hero_black), 3) –ø—É—Ç—å –∫ 360/hero, 4) heroImage –º–æ–¥–µ–ª–∏
  const get360HeroPath = () => {
    if (props.imageUrl) return props.imageUrl;
    if (category && slug) {
      // –î–ª—è Neo –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —É—Ç–∏–ª–∏—Ç—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è hero_black.jpg
      if (category === 'neo') {
        return getNeoHeroPath(slug, 'black');
      }
      // –î–ª—è –¥—Ä—É–≥–∏—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—É—Ç—å
      return `/assets/${category}/${slug}/360/hero.jpg`;
    }
    return model.heroImage || '';
  };
  
  const imageUrl = get360HeroPath();
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ 360 –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ (–¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
  const handle360View = () => {
    setIsLoading(true);
    setTimeout(() => {
      setIsLoading(false);
      if (view360Url) {
        window.location.href = view360Url;
      } else {
        alert('360¬∞ view will be available soon!');
      }
    }, 1000);
  };
  
  // –î–ª—è Neo: –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –≥–æ—Ç–æ–≤—ã–π Neo360Page (preview) –±–µ–∑ —Ç—É—Ä-–≤—å—é–µ—Ä–∞
  if (category === 'neo') {
    const isValidSlug = slug && slug !== 'undefined' && slug !== 'null';
    console.log(`üîç Virtual360Viewer(neo): slug="${slug}" valid=${!!isValidSlug}`);
    if (isValidSlug) {
      return (
        <Neo360Page 
          slug={slug}
          name={modelName}
          description={description}
        />
      );
    }
    // –µ—Å–ª–∏ slug –Ω–µ–≤–∞–ª–∏–¥–µ–Ω ‚Äî –æ—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä–µ–∂–Ω—é—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –Ω–∏–∂–µ
  }

  // –î–ª—è Premium: –∏—Å–ø–æ–ª—å–∑—É–µ–º –≥–æ—Ç–æ–≤—ã–π Premium360Tour (preview)
  if (category === 'premium') {
    const isValidSlug = slug && slug !== 'undefined' && slug !== 'null';
    console.log(`üîç Virtual360Viewer(premium): slug="${slug}" valid=${!!isValidSlug}`);
    if (isValidSlug) {
      return (
        <Premium360Tour 
          houseName={modelName || slug}
          houseSlug={slug}
          description={description}
        />
      );
    }
  }

  // –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω—ã category –∏ slug (–¥–ª—è –¥—Ä—É–≥–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π), –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–æ—É—Ç–µ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
  if (category && slug) {
    console.log(`üîç Virtual360Viewer: Using CategorySpecific360Viewer with category="${category}", slug="${slug}", name="${modelName}"`);
    return (
      <CategorySpecific360Viewer 
        category={category}
        slug={slug}
        name={modelName}
        description={description}
        fullView={fullView}
      />
    );
  }
  
  // –õ–æ–≥–∏—Ä—É–µ–º —Å–ª—É—á–∞–∏, –∫–æ–≥–¥–∞ category –∏–ª–∏ slug –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç
  console.log(`‚ö†Ô∏è Virtual360Viewer: Fallback to standard component. category="${category}", slug="${slug}", modelName="${modelName}"`);
  console.log(`‚ö†Ô∏è Virtual360Viewer: Props received:`, { 
    imageUrl: props.imageUrl, 
    modelName: props.modelName, 
    category: props.category, 
    slug: props.slug,
    model: props.model 
  });
  
  // –ò–Ω–∞—á–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç (–¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
  return (
    <Card className={`overflow-hidden ${isDark ? 'bg-slate-800/60 border-slate-700/50' : 'bg-white/90 border-gray-200'} backdrop-blur-xl`}>
      {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è (–¥–ª—è —Å—Ç–∞—Ä–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞) */}
      {onClose && (
        <Button
          variant="ghost"
          size="icon"
          onClick={onClose}
          className="absolute top-2 right-2 z-10 bg-black/40 hover:bg-black/60 text-white rounded-full"
        >
          <X className="w-4 h-4" />
        </Button>
      )}
      
      <div className="relative aspect-video">
        <img 
          src={imageUrl}
          alt={modelName}
          className="w-full h-full object-cover"
        />
        
        {/* Overlay Controls */}
        <div className="absolute inset-0 bg-black/20 opacity-0 hover:opacity-100 transition-opacity duration-300">
          <div className="absolute inset-0 flex items-center justify-center">
            <motion.div
              whileHover={{ scale: 1.1 }}
              whileTap={{ scale: 0.9 }}
            >
              <Button
                size="lg"
                onClick={handle360View}
                disabled={isLoading}
                className="bg-cyan-500/20 hover:bg-cyan-500/30 text-white border-cyan-400/50 backdrop-blur-md"
              >
                {isLoading ? (
                  <RotateCcw className="w-6 h-6 animate-spin" />
                ) : (
                  <Play className="w-6 h-6" />
                )}
                <span className="ml-2">360¬∞ View</span>
              </Button>
            </motion.div>
          </div>
          
          <div className="absolute top-4 right-4">
            <Button
              size="sm"
              variant="ghost"
              onClick={() => window.open(view360Url || '#', '_blank')}
              className="bg-black/30 hover:bg-black/50 text-white border-white/20 backdrop-blur-md"
            >
              <Maximize2 className="w-4 h-4" />
            </Button>
          </div>
        </div>
      </div>
      
      <div className="p-4">
        <h3 className={`${isDark ? 'text-white' : 'text-gray-800'} font-medium mb-2`}>Virtual Tour</h3>
        <p className={`${isDark ? 'text-slate-400' : 'text-gray-500'} text-sm`}>
          Experience {modelName} in immersive 360¬∞ view
        </p>
      </div>
    </Card>
  );
}
